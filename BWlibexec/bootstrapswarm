#!/bin/bash

##Get options
message_use="
bootstrapswarm.sh
By John McCulloch
Splits a swarm file into chunks of size n and launches each batch on Biowulf with a dependency upon the completion of the preceding chunk. 

Use: $(basename "$0") -s file.swarm -l lines_per_chunk -t CPUs_per_task -m Mem_per_task -g Gigabytes_for_lscratch
-h Help
-v Version
-s Swarm file to be used as input
-l How many lines in a swarm chunk split do you want to run? [ Default = 15 ]
-t How many CPUs per task do you want to launch? [ Default = 32 ]
-m How many gigabytes of memory per task do you want to request? [ Default = 96 ]
-g How many gigabytes of disk space do you want for lscratch for each chunk? [ Default = 500 ]
-j slurm job id to add as initial depdndency for first batch 
-w Modules needed for running swarm

"

version="1.2"
verdate="NOV-2018"
message_ver="bootstrapswarm.sh ver $version by John McCulloch $verdate"

#Define defaults
chunksize=15
threads=32
memGB=96
lscratch=500
swarmfile=""
modules=""
jobid=""

#Get options
usage () { echo "$message_use"; }

version () { echo "$message_ver"; }
function die {
    echo "$@" >&2
    exit 1
}

options=':s:l:t:m:g:w:j:vh'
while getopts $options option
do
    case $option in
        s  ) swarmfile="$OPTARG" ;;
        l  ) chunksize="$OPTARG" ;;
        t  ) threads="$OPTARG" ;;
        w  ) modules="$OPTARG" ;;
        m  ) memGB="$OPTARG" ;;
        j  ) jobid="$OPTARG" ;;
        g  ) lscratch="$OPTARG" ;;
        v  ) version; exit ;;
        h  ) usage; exit ;;
        \? ) echo "Unknown option: -$OPTARG" >&2; exit 1;;
        :  ) echo "Missing option argument for -$OPTARG" >&2; exit 1;;
        *  ) echo "Unimplemented option: -$OPTARG" >&2; exit 1;;
    esac
done

shift $(($OPTIND - 1))

#Check for silly stuff
if [ "$swarmfile" == "" ]
then
    die "You must supply a swarm file."
fi

#Build core command
coreswarmcmd="swarm -g $memGB -t $threads --time 22:00:00 --partition=norm,ccr --gres=lscratch:$lscratch" 

if [ "$modules" != "" ] 
then
    coreswarmcmd=`echo $coreswarmcmd --module $modules`
fi

#split into chunks
split $swarmfile -l $chunksize
mysplits=`ls x*`
swarmbase=`echo $swarmfile | cut -f 1 -d "."`
nsplit=1

#Loop over and launch stuff
for split in $mysplits
do
    mv "$split" "$swarmbase"_"$split".swarm
    currswarm="$swarmbase"_"$split".swarm
    if [ "$nsplit" -eq 1 ]
    then
        if [ "$jobid" == "" ]
        then
            finalcommand="$coreswarmcmd -f $currswarm"
        else
            finalcommand="$coreswarmcmd --dependency=afterany:$jobid -f $currswarm"
        fi
    else
        finalcommand="$coreswarmcmd --dependency=afterany:$currjob -f $currswarm"    
    fi

    echo "Launching chunk $nsplit with command: $finalcommand"
    `echo $finalcommand` > chunk.job
    currjob=`cat chunk.job`
    nsplit=$((nsplit+1))
    #Give it some time to settle just for caution
    sleep 10
done
